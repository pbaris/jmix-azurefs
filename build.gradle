buildscript {
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath 'io.jmix.gradle:jmix-gradle-plugin:1.4.0'
    }
}

group = 'gr.netmechanics.jmix'
version = '1.4.0'

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'io.jmix'
    apply plugin: 'signing'

    repositories {
        mavenCentral()
        maven {
            url 'https://global.repo.jmix.io/repository/public'
        }
    }

    jmix {
        bomVersion = '1.4.0'
        projectId = 'azurefs'
    }

    group = this.group
    version = this.version

    def props = new Properties()
    buildFile.withInputStream { props.load(it) }
    def subArchivesBaseName = props.getProperty('archivesBaseName')
    def archName = subArchivesBaseName.substring(1, subArchivesBaseName.length() - 1)

    java {
        withSourcesJar()
    }

    artifacts {
        archives sourcesJar
    }

    ext {
        isReleaseVersion = !version.endsWith("SNAPSHOT")
    }

    publishing {
        repositories {
            maven {
                def releaseRepo = "https://s01.oss.sonatype.org/content/repositories/releases/"
                def snapshotRepo = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                url = isReleaseVersion ? releaseRepo : snapshotRepo
                credentials {
                    username = rootProject.hasProperty('ossrhUsername') ? rootProject['ossrhUsername'] : "Unknown"
                    password = rootProject.hasProperty('ossrhPassword') ? rootProject['ossrhPassword'] : "Unknown"
                }
            }
        }
        publications {
            javaMaven(MavenPublication) {
                artifactId = archName
                from components.java
            }
        }
    }

    signing {
        sign publishing.publications.javaMaven
    }

    // remove after https://youtrack.jetbrains.com/issue/IDEA-227215 is fixed
    tasks.withType(GenerateModuleMetadata) {
        enabled = false
    }
}
